% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/geojson_write.r
\name{geojson_write}
\alias{as.geojson}
\alias{geojson_write}
\alias{geojson_write.SpatialGrid}
\alias{geojson_write.SpatialGridDataFrame}
\alias{geojson_write.SpatialLines}
\alias{geojson_write.SpatialLinesDataFrame}
\alias{geojson_write.SpatialPoints}
\alias{geojson_write.SpatialPointsDataFrame}
\alias{geojson_write.SpatialPolygons}
\alias{geojson_write.SpatialPolygonsDataFrame}
\alias{geojson_write.data.frame}
\alias{geojson_write.geo_list}
\alias{geojson_write.json}
\alias{geojson_write.list}
\alias{geojson_write.numeric}
\title{Convert many input types with spatial data to a geojson file}
\usage{
geojson_write(...)

\method{geojson_write}{geo_list}(input, file = "myfile.geojson", ...)

\method{geojson_write}{json}(input, file = "myfile.geojson", ...)

\method{geojson_write}{SpatialPolygons}(input, file = "myfile.geojson", ...)

\method{geojson_write}{SpatialPolygonsDataFrame}(input,
  file = "myfile.geojson", ...)

\method{geojson_write}{SpatialPoints}(input, file = "myfile.geojson", ...)

\method{geojson_write}{SpatialPointsDataFrame}(input, file = "myfile.geojson",
  ...)

\method{geojson_write}{SpatialLines}(input, file = "myfile.geojson", ...)

\method{geojson_write}{SpatialLinesDataFrame}(input, file = "myfile.geojson",
  ...)

\method{geojson_write}{SpatialGrid}(input, file = "myfile.geojson", ...)

\method{geojson_write}{SpatialGridDataFrame}(input, file = "myfile.geojson",
  ...)

\method{geojson_write}{numeric}(input, lat = "latitude", lon = "longitude",
  polygon = NULL, file = "myfile.geojson", ...)

\method{geojson_write}{data.frame}(input, lat = "latitude",
  lon = "longitude", polygon = NULL, file = "myfile.geojson", ...)

\method{geojson_write}{list}(input, lat = "latitude", lon = "longitude",
  polygon = NULL, file = "myfile.geojson", ...)

as.geojson(path, type)
}
\arguments{
\item{...}{Further args passed on to \code{\link[rgdal]{writeOGR}}}

\item{input}{Input list, data.frame, or spatial class. Inputs can also be dplyr \code{tbl_df}
class since it inherits from \code{data.frame}.}

\item{file}{A path and file name (e.g., myfile), with the .geojson on the end.}

\item{lat}{Latitude name. Default: latitude}

\item{lon}{Longitude name. Default: longitude}

\item{polygon}{If a polygon is defined in a data.frame, this is the column that defines the
grouping of the polygons in the \code{data.frame}}

\item{path}{Path to file}

\item{type}{Type of file}
}
\description{
Convert many input types with spatial data to a geojson file
}
\examples{
\dontrun{
# From a data.frame
geojson_write(us_cities[1:2,], lat='lat', lon='long')

# From polygons in R
head(states)
geojson_write(input=states, lat='lat', lon='long', polygon='group')

## From a list
mylist <- list(list(latitude=30, longitude=120, marker="red"),
               list(latitude=30, longitude=130, marker="blue"))
geojson_write(mylist)

# From a numeric vector of length 2
vec <- c(32.45,-99.74)
geojson_write(vec)

# From SpatialPolygons class
library('sp')
poly1 <- Polygons(list(Polygon(cbind(c(-100,-90,-85,-100),
   c(40,50,45,40)))), "1")
poly2 <- Polygons(list(Polygon(cbind(c(-90,-80,-75,-90),
   c(30,40,35,30)))), "2")
sp_poly <- SpatialPolygons(list(poly1, poly2), 1:2)
geojson_write(sp_poly)

# From SpatialPolygonsDataFrame class
sp_polydf <- as(sp_poly, "SpatialPolygonsDataFrame")
geojson_write(input = sp_polydf)
geojson_write(input = sp_polydf, file = "~/stuff")

# From SpatialGrid
x <- GridTopology(c(0,0), c(1,1), c(5,5))
y <- SpatialGrid(x)
geojson_write(y)

# From SpatialGridDataFrame
sgdim <- c(3,4)
sg <- SpatialGrid(GridTopology(rep(0,2), rep(10,2), sgdim))
sgdf <- SpatialGridDataFrame(sg, data.frame(val = 1:12))
geojson_write(sgdf)

# Write output of geojson_list to file
res <- geojson_list(us_cities[1:2,], lat='lat', lon='long')
class(res)
geojson_write(res)

# Write output of geojson_json to file
res <- geojson_json(us_cities[1:2,], lat='lat', lon='long')
class(res)
geojson_write(res)
}
}
\seealso{
\code{\link{geojson_list}}, \code{\link{geojson_json}}
}

