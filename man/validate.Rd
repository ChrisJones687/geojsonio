% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/validate.R
\name{validate}
\alias{validate}
\alias{validate.SpatialGrid}
\alias{validate.SpatialGridDataFrame}
\alias{validate.SpatialLines}
\alias{validate.SpatialLinesDataFrame}
\alias{validate.SpatialPoints}
\alias{validate.SpatialPointsDataFrame}
\alias{validate.SpatialPolygons}
\alias{validate.SpatialPolygonsDataFrame}
\alias{validate.character}
\alias{validate.data.frame}
\alias{validate.geo_list}
\alias{validate.json}
\alias{validate.list}
\alias{validate.location}
\alias{validate.numeric}
\title{Validate a geoJSON file, json object, list, or Spatial class.}
\usage{
validate(x, ...)

\method{validate}{character}(x, ...)

\method{validate}{location}(x, ...)

\method{validate}{geo_list}(x, ...)

\method{validate}{json}(x, ...)

\method{validate}{SpatialPolygons}(x, ...)

\method{validate}{SpatialPolygonsDataFrame}(x, ...)

\method{validate}{SpatialPoints}(x, ...)

\method{validate}{SpatialPointsDataFrame}(x, ...)

\method{validate}{SpatialLines}(x, ...)

\method{validate}{SpatialLinesDataFrame}(x, ...)

\method{validate}{SpatialGrid}(x, ...)

\method{validate}{SpatialGridDataFrame}(x, ...)

\method{validate}{numeric}(x, ...)

\method{validate}{data.frame}(x, ...)

\method{validate}{list}(x, ...)
}
\arguments{
\item{x}{Input list, data.frame, or spatial class. Inputs can also be dplyr \code{tbl_df}
class since it inherits from \code{data.frame}.}

\item{...}{Further args passed on to helper functions.}
}
\description{
Validate a geoJSON file, json object, list, or Spatial class.
}
\details{
Uses the web service at \url{http://geojsonlint.com/}
}
\examples{
\dontrun{
# From a json character string
validate(x = '{"type": "Point", "coordinates": [-100, 80]}') # good
validate(x = '{"type": "Rhombus", "coordinates": [[1, 2], [3, 4], [5, 6]]}') # bad

# A file
file <- system.file("examples", "zillow_or.geojson", package = "togeojson")
validate(x = as.location(file))

# A URL
url <- "https://raw.githubusercontent.com/glynnbird/usstatesgeojson/master/california.geojson"
validate(as.location(url))

# From output of geojson_list
(x <- geojson_list(us_cities[1:2,], lat='lat', lon='long'))
validate(x)

# From output of geojson_json
(x <- geojson_json(us_cities[1:2,], lat='lat', lon='long'))
validate(x)

# From a list turned into geo_list
mylist <- list(list(latitude=30, longitude=120, marker="red"),
               list(latitude=30, longitude=130, marker="blue"))
x <- geojson_list(mylist)
class(x)
validate(x)

# From SpatialPoints class
library("sp")
a <- c(1,2,3,4,5)
b <- c(3,2,5,1,4)
(x <- SpatialPoints(cbind(a,b)))
class(x)
validate(x)
}
}

